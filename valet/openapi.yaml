openapi: 3.0.0
info:
  version: v1
  title: Valet Deep Integration API's
  description: Deep integration APIs for valet. Aeria handles the authorization
    and price calculation, while the partner handles the valet operations.
tags:
  - name: Valet Operations
    description: APIs For Valet Operations
  - name: Webhook Operations
    description: APIs For Webhook Operations

components:
  parameters:
    signatureHeader:
      in: header
      name: x-signature
      required: true
      schema:
        type: string
  schemas:
    Bay:
      type: object
      properties:
        name:
          type: string
          example: A-14
        location:
          type: string
          example: Green Zone, Basement 1
      required:
        - location

# Parking Operations

paths:
  /partner/v1/valet/valet-points:
    get:
      tags:
        - Valet Operations
      summary: Get Valet Points
      description: Get Valet Points
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    address:
                      type: string
                    coordinates:
                      type: string
                    status:
                      type: string

  /partner/v1/valet/vehcile/{registrationNumber}/identities:
    get:
      tags:
        - Valet Operations
      summary: Get Vehicle Info
      description: Get Vehicle Info for existing vehicle
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
        - in: path
          name: registrationNumber
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    upin:
                      type: string
                      example: U123456
                    name:
                      type: string
                      example: John Doe
                  required:
                    - upin
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No identities found for the vehicle

  /partner/v1/valet/service/request-entry:
    post:
      tags:
        - Valet Operations
      summary: Request Vehicle Entry
      description: Request Vehicle Entry
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valetPointId:
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                registrationNumber:
                  type: string
                  example: DL01AB1234
                type:
                  type: string
                  example: 4w
                userInfo:
                  type: object
                  description: Required either upin or phoneNumber
                  properties:
                    upin:
                      type: string
                      example: U123456
                    phoneNumber:
                      type: string
                      example: 9876543210
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  serviceId:
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  isPrePaid:
                    type: boolean
                  bay:
                    description: Given in case user has already booked a parking and wants to use valet as a concierge
                    $ref: '#/components/schemas/Bay'
                required:
                  - serviceId
                  - isPrePaid

  /partner/v1/valet/service/{serviceId}/request-exit:
    post:
      tags:
        - Valet Operations
      summary: Request Vehicle Exit
      description: Request Vehicle Exit
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
        - in: path
          name: serviceId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                valetPointId:
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  pendingAmount:
                    type: number
                    example: 100

  /valet/v1/service/{serviceId}:
    get:
      tags:
        - Valet Operations
      summary: Get Service Details
      description: Get Service Details
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
        - in: path
          name: serviceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: IN_PROGRESS
                  pendingAmount:
                    type: number
                  registrationNumber:
                    type: string
                  vehicleType:
                    type: string
                  checkInTime:
                    type: string
                    format: date-time
                  checkOutTime:
                    type: string
                    format: date-time

  /valet/v1/service/{serviceId}/update-status:
    post:
      tags:
        - Valet Operations
      summary: Update Service Status
      description: Update Service Status
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
        - in: path
          name: serviceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  
  /<webhook:retrieve-vehicle>:
    post:
      tags:
        - Webhook Operations
      summary: Retrieve Vehicle
      description: Retrieve Vehicle
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serviceId:
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                valetPointId:
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                isPrePaid:
                  type: boolean
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /<webhook:update-service>:
    post:
      tags:
        - Webhook Operations
      summary: "[Optional] Service Update"
      description: Service Update
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serviceId:
                  type: string
                status:
                  type: string
                  example: IN_PROGRESS
                pendingAmount:
                  type: number
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /<webhook:get-status>:
    get:
      tags:
        - Webhook Operations
      summary: "[Optional] Get Status Update"
      description: Get Status Update
      parameters:
        - $ref: '#/components/parameters/signatureHeader'
        - in: query
          name: serviceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: IN_PROGRESS # collected, parked, retrieving, handedover
                  isPaid:
                    type: boolean